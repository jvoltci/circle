{"version":3,"sources":["components/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["API_URL","useStyles","makeStyles","theme","table","minWidth","selectEmpty","border","borderRadius","marginTop","spacing","Home","useState","rows","setRows","categories","setCategories","subcategories","setSubcategories","category","setCategory","subcategory","setSubcategory","productName","setProductName","isSaving","setIsSaving","showAdd","setShowAdd","isAsc","setIsAsc","handleSort","type","tempRows","sort","a","b","Categories","SubCategories","Products","useEffect","fetch","then","res","json","length","forEach","products","product","i","push","tempRow","row","lineObject","catch","err","console","log","classes","Container","maxWidth","Button","onClick","variant","color","TableContainer","component","Paper","Table","className","TableHead","TableRow","TableCell","style","fontWeight","align","TableBody","map","scope","TextField","id","label","onChange","event","target","value","method","headers","Accept","body","JSON","stringify","ProductName","subCategory","message","disabled","NativeSelect","Object","keys","Number","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4747010e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport UnfoldMoreIcon from '@material-ui/icons/UnfoldMore';\r\n\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst API_URL = 'https://ivehement.herokuapp.com'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  selectEmpty: {\r\n    border: \"1px solid #ced4da\",\r\n    borderRadius: 5,\r\n    marginTop: theme.spacing(0),\r\n  },\r\n}));\r\n\r\nexport default function Home() {\r\n  const [rows, setRows] = useState([]);\r\n  const [categories, setCategories] = useState({});\r\n  const [subcategories, setSubcategories] = useState({});\r\n  const [category, setCategory] = useState(\"\");\r\n  const [subcategory, setSubcategory] = useState(\"\");\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [showAdd, setShowAdd] = useState(true);\r\n  const [isAsc, setIsAsc] = useState(true);\r\n\r\n  const handleSort = (type) => {\r\n      let tempRows = rows;\r\n      if(isAsc) {\r\n        tempRows.sort((a, b) => {\r\n            if(a[type] > b[type]) return 1;\r\n            if(a[type] < b[type]) return -1;\r\n            return 0;\r\n        })\r\n      }\r\n      else {\r\n        tempRows.sort((a, b) => {\r\n            if(a[type] < b[type]) return 1;\r\n            if(a[type] > b[type]) return -1;\r\n            return 0;\r\n        })\r\n      }\r\n      setIsAsc(!isAsc);\r\n      setRows(tempRows);\r\n  }\r\n\r\n  const handleShowAdd = () => {\r\n    setShowAdd(!showAdd);\r\n  };\r\n  const handleCategoryChange = (event) => {\r\n    setCategory(event.target.value);\r\n  };\r\n  const handleSubCategoryChange = (event) => {\r\n    setSubcategory(event.target.value);\r\n  };\r\n  const handleNameChange = (event) => {\r\n    setProductName(event.target.value);\r\n  };\r\n  const handleSave = () => {\r\n    setIsSaving(true);\r\n    if (subcategory !== \"\" && productName.length > 2) {\r\n      fetch(`${API_URL}/product`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          ProductName: productName,\r\n          subCategory: subcategory,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((message) => {\r\n          if (message !== \"Failed to Add.\") {\r\n            let tempRows = rows;\r\n            tempRows.push({\r\n              product: productName,\r\n              subcategory: subcategories[subcategory][\"SubCategoryName\"],\r\n              category: categories[category][\"CategoryName\"],\r\n            });\r\n            setRows(tempRows);\r\n          }\r\n          setProductName('');\r\n          setCategory('');\r\n          setSubcategory('');\r\n          setIsSaving(false);\r\n          setShowAdd(!showAdd);\r\n        });\r\n    }\r\n    else {\r\n        setProductName('');\r\n        setCategory('');\r\n        setSubcategory('');\r\n        setIsSaving(false);\r\n        setShowAdd(!showAdd);\r\n    }\r\n  };\r\n\r\n  let Categories = {};\r\n  let SubCategories = {};\r\n  let Products = [];\r\n\r\n  const lineObject = () => {\r\n    let tempRow = [];\r\n    for (let i = 0; i < Products.length; i++) {\r\n      let row = {};\r\n      row[\"product\"] = Products[i][\"ProductName\"];\r\n      row[\"subcategory\"] =\r\n        SubCategories[Products[i][\"subCategory\"]][\"SubCategoryName\"];\r\n      row[\"category\"] =\r\n        Categories[SubCategories[Products[i][\"subCategory\"]][\"category\"]][\r\n          \"CategoryName\"\r\n        ];\r\n      tempRow.push(row);\r\n    }\r\n    setRows(tempRow);\r\n    setCategories(Categories);\r\n    setSubcategories(SubCategories);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(`${API_URL}/category`)\r\n      .then((res) => res.json())\r\n      .then((categories) => {\r\n        if (categories.length > 0) {\r\n          return categories.forEach((category) => {\r\n            Categories[category[\"id\"]] = category;\r\n            fetch(`${API_URL}/category/${category[\"id\"]}`)\r\n              .then((res) => res.json())\r\n              .then((subcategories) => {\r\n                if (subcategories.length > 0) {\r\n                  return subcategories.forEach((subcategory) => {\r\n                    SubCategories[subcategory[\"id\"]] = subcategory;\r\n                    fetch(\r\n                      `${API_URL}/product/subcategory/${subcategory[\"id\"]}`\r\n                    )\r\n                      .then((res) => res.json())\r\n                      .then((products) => {\r\n                        return products.forEach((product, i) => {\r\n                          Products.push(product);\r\n                          if (i === products.length - 1) lineObject(); //check\r\n                        });\r\n                      });\r\n                  });\r\n                }\r\n              });\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      {showAdd ? (\r\n        <Button onClick={handleShowAdd} variant=\"contained\" color=\"secondary\">\r\n          Add\r\n        </Button>\r\n      ) : null}\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <Button onClick={() => handleSort('product')} color=\"primary\">\r\n                  <span style={{ fontWeight: \"800\" }}>Product</span>\r\n                  <UnfoldMoreIcon />\r\n                </Button>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <Button onClick={() => handleSort('subcategory')} color=\"primary\">\r\n                  <span style={{ fontWeight: \"800\" }}>Subcategory</span>\r\n                  <UnfoldMoreIcon />\r\n                </Button>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <Button onClick={() => handleSort('category')} color=\"primary\">\r\n                  <span style={{ fontWeight: \"800\" }}>Category</span>\r\n                  <UnfoldMoreIcon />\r\n                </Button>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow key={row.product}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.product}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.subcategory}</TableCell>\r\n                <TableCell align=\"right\">{row.category}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n            {!showAdd ? (\r\n              <TableRow key={\"save\"}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Product Name\"\r\n                    onChange={handleNameChange}\r\n                  />\r\n                  <Button\r\n                    onClick={handleSave}\r\n                    disabled={isSaving}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <NativeSelect\r\n                    className={classes.selectEmpty}\r\n                    value={subcategory}\r\n                    onChange={handleSubCategoryChange}\r\n                  >\r\n                    <option value=\"\" disabled>\r\n                      Subcategory\r\n                    </option>\r\n                    {Object.keys(subcategories).map((id) => {\r\n                      if (subcategories[id][\"category\"] === Number(category)) {\r\n                        return (\r\n                          <option key={id} value={id}>\r\n                            {subcategories[id][\"SubCategoryName\"]}\r\n                          </option>\r\n                        );\r\n                      }\r\n                    })}\r\n                  </NativeSelect>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <NativeSelect\r\n                    className={classes.selectEmpty}\r\n                    value={category}\r\n                    onChange={handleCategoryChange}\r\n                  >\r\n                    <option value=\"\" disabled>\r\n                      Category\r\n                    </option>\r\n                    {Object.keys(categories).map((id) => {\r\n                      return (\r\n                        <option key={id} value={id}>\r\n                          {categories[id][\"CategoryName\"]}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </NativeSelect>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Container>\r\n  );\r\n}\r\n","import './App.css';\nimport Home from './components/Home'\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}